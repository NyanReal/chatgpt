1
00:00:01,790 --> 00:00:07,350
지난 영상에서는 근육-지방 결합 시뮬레이션을 위해 Flesh 에셋을 준비했습니다.

2
00:00:07,910 --> 00:00:10,970
이제 여기서 시뮬레이션 파라미터를 설정해 보겠습니다.

3
00:00:11,790 --> 00:00:19,810
먼저 Asset Details로 가서 Skeletal Mesh를 지정하세요. 이번 예시는 이 본(bone) 세트를 사용합니다.

4
00:00:21,310 --> 00:00:30,630
이 단계에서, 기반이 되는 스켈레탈 메시에 에셋을 만들 때 사용했던 메쉬와 동일한 것이 연결되어 있는지 꼭 확인하세요.

5
00:00:30,630 --> 00:00:40,490
Transform Source를 확인하고, 사용 중인 속성 이름도 체크합니다.

6
00:00:41,170 --> 00:00:47,230
여기서는 ‘SK_Emil_Muscles’ 같은 근육용 스켈레탈 메쉬를 사용합니다.

7
00:00:48,370 --> 00:00:50,370
그다음 Preview Scene으로 이동합니다.

8
00:00:51,330 --> 00:00:57,630
각 파라미터에 대한 자세한 설명은 근육 시뮬레이션 영상에서 다시 확인할 수 있습니다.

9
00:00:59,210 --> 00:01:02,290
지금은 여기 파라미터만 빠르게 훑어보겠습니다.

10
00:01:02,290 --> 00:01:09,510
이번 예시는 서브스텝 20, 반복(iterations) 20을 사용하겠습니다.

11
00:01:11,430 --> 00:01:20,490
이번 시뮬레이션은 근육만 있는 것이 아니라 지방층도 포함하고 있어서, 근육의 운동이 지방층으로 전달되어야 합니다.

12
00:01:21,110 --> 00:01:26,710
즉, 근육에서 일어난 변형이 지방층까지 제대로 전파되어야 한다는 뜻이죠.

13
00:01:26,970 --> 00:01:29,070
그래서 풀이 반복 횟수가 더 필요합니다.

14
00:01:31,830 --> 00:01:36,670
다음으로, 우리는 ‘쿼지정적(quasi-static)’ 시뮬레이션을 돌릴 것이므로 해당 옵션을 확인합니다.

15
00:01:36,670 --> 00:01:40,130
충돌 처리를 위해 관련 옵션을 켜줍니다.

16
00:01:43,550 --> 00:01:50,870
그리고 ‘가우스-자이델(Gauss–Seidel)’ 솔버를 사용합니다. 쿼지정적에 맞춰 설계된 솔버이기 때문입니다.

17
00:01:53,970 --> 00:01:56,670
지금은 스프링 충돌(Spring Collision)은 끄겠습니다.

18
00:01:56,670 --> 00:02:00,930
그 옵션을 켜면 충돌 경우의 수가 꽤 복잡해지기 때문입니다.

19
00:02:01,510 --> 00:02:06,970
해당 옵션은 연결된 모든 지오메트리 그룹 간의 충돌을 전부 검사하게 됩니다.

20
00:02:07,830 --> 00:02:11,650
우리는 주로 지방층의 바깥쪽끼리만 충돌이 일어나길 원합니다.

21
00:02:12,030 --> 00:02:13,410
예를 들면, 팔꿈치 부근처럼요.

22
00:02:14,430 --> 00:02:17,810
이런 형태의 충돌 지원은 5.6 릴리스에서 제공될 예정입니다.

23
00:02:18,830 --> 00:02:20,530
그러니 지금은 그 부분을 건너뛰겠습니다.

24
00:02:25,190 --> 00:02:30,590
또한 중력은 끄겠습니다. 현재 가우스-자이델 솔버와는 호환되지 않습니다.

25
00:02:33,570 --> 00:02:41,230
그리고 ‘Do Muscle Activation’ 옵션을 켜서 이두(biceps)와 하부 대흉근(lower pectoralis) 같은 근육이 실제로 수축하도록 합니다.

26
00:02:43,990 --> 00:02:49,610
이번 시뮬레이션에서는 다른 애니메이션으로 ‘관절 가동범위(ROM) 애니메이션’을 사용하겠습니다.

27
00:02:53,740 --> 00:02:57,380
여기 아래에서 새 캐시 컬렉션(Cache Collection)을 하나 만듭니다.

28
00:03:04,110 --> 00:03:07,850
이름은 ‘Fat_Chaos_Cache_Collection’ 정도로 하겠습니다.

29
00:03:09,030 --> 00:03:12,110
조금 더 긴 시뮬레이션을 돌려보죠.

30
00:03:13,390 --> 00:03:17,210
30fps로 5초, 즉 총 150프레임을 실행합니다.

31
00:03:17,530 --> 00:03:20,670
그래서 전체 프레임 수는 150프레임입니다.

32
00:03:23,910 --> 00:03:28,190
빨간 ‘Record’ 버튼을 눌러 시뮬레이션을 시작합시다.

33
00:03:29,270 --> 00:03:35,590
누르면 솔버가 백그라운드에서 시뮬레이션 초기 설정을 수행하기 시작합니다.

34
00:03:35,970 --> 00:03:39,130
곧 알림 창이 뜨는 것도 볼 수 있을 겁니다.

35
00:03:41,550 --> 00:03:47,510
이번엔 시뮬레이션 정점 수가 더 많아서 전체적으로 시간이 더 걸릴 겁니다.

36
00:03:47,510 --> 00:03:51,970
또 서브스텝과 반복 횟수도 이전보다 높게 잡았습니다.

37
00:03:54,090 --> 00:03:59,290
프레임 2개 정도만 완료될 때까지 기다렸다가, 결과가 나오면 다시 보겠습니다.

38
00:04:02,580 --> 00:04:06,780
전체 시뮬레이션은 약 30분 정도 걸렸고, 지금 결과가 나왔습니다.

39
00:04:07,200 --> 00:04:10,880
재생(Play)을 눌러 시뮬레이션을 확인해 보죠.

40
00:04:11,460 --> 00:04:17,240
팔을 내릴 때 하부 대흉근이 수축하는 부분을 잘 봐 주세요.

41
00:04:25,720 --> 00:04:32,180
이제 지방층의 시뮬레이션이 있으니, 그 변형을 피부(skin)에 전달하겠습니다.

42
00:04:32,840 --> 00:04:34,920
결국 우리가 보게 되는 건 피부니까요.

43
00:04:35,540 --> 00:04:39,200
피부 메쉬를 지방층의 사면체(tetrahedral) 메쉬 안으로 임베드한 뒤,

44
00:04:39,400 --> 00:04:43,740
바리센터릭(무게중심) 보간으로 시뮬레이션 결과에서 피부를 인터폴레이션합니다.

45
00:04:46,200 --> 00:04:53,560
그러려면 Dataflow 그래프로 돌아가 ‘Generate Surface Bindings’ 노드를 새로 만듭니다.

46
00:04:58,350 --> 00:05:04,130
이 노드는 Static Mesh나 Skeletal Mesh를 입력으로 받을 수 있습니다.

47
00:05:04,630 --> 00:05:08,690
여기서는 우리의 피부 메쉬(예: skin_coarse_fixed_blend)를 쓰겠습니다.

48
00:05:11,210 --> 00:05:14,310
그리고 이 메쉬를 컬렉션과 연결해야 합니다.

49
00:05:14,610 --> 00:05:18,130
이번 경우에는 지방층(fat layer)에만 임베드하면 됩니다.

50
00:05:18,430 --> 00:05:22,090
‘Get Flesh Asset’에서 가져온 지방층 컬렉션을 사용하면 되죠.

51
00:05:22,090 --> 00:05:25,050
여기서 안전하게 설정할 수 있습니다.

52
00:05:27,670 --> 00:05:29,270
지금 평가(Evaluating)가 진행 중입니다.

53
00:05:29,610 --> 00:05:30,610
완료되었습니다.

54
00:05:31,050 --> 00:05:32,810
이제 컬렉션을 다시 연결합니다.

55
00:05:35,790 --> 00:05:39,510
여기에 저장된 모든 바리센터릭 데이터는

56
00:05:39,710 --> 00:05:44,630
Append Tetrahedral Collection을 통해 자동으로 갱신됩니다.

57
00:05:44,630 --> 00:05:50,070
결국 추가된 컬렉션에도 올바른 정보가 채워지게 됩니다.

58
00:05:53,660 --> 00:05:57,700
이 노드에는 ‘Do Surface Projection’ 옵션도 있습니다.

59
00:05:58,320 --> 00:06:04,180
피부가 항상 지방 사면체 메쉬 안에 완전히 들어가 있는 것은 아니기 때문입니다.

60
00:06:04,620 --> 00:06:10,360
피부가 사면체 메쉬 바깥으로 약간 벗어나는 경우에는,

61
00:06:10,540 --> 00:06:16,680
피부를 사면체 메쉬의 표면에 임베드하고 오프셋 벡터를 적용해 주면 됩니다.

62
00:06:16,680 --> 00:06:17,260
바로 그 오프셋 벡터입니다.

63
00:06:17,720 --> 00:06:24,540
그래서 피부 정점이 살짝 밖에 있어도 임베드되도록 이 옵션을 켜 두세요.

64
00:06:27,460 --> 00:06:34,320
이제 설정이 끝났으니 지오메트리 캐시 생성을 준비하겠습니다.

65
00:06:36,120 --> 00:06:41,820
‘Embedded Skeletal Mesh’에는 앞에서 사용한 것과 동일한 스켈레탈 메쉬를 지정해야 합니다.

66
00:06:42,020 --> 00:06:43,080
즉, 피부 메쉬입니다.

67
00:06:43,880 --> 00:06:45,300
그 값을 지정해 줍니다.

68
00:06:46,680 --> 00:06:53,000
‘Geometry Cache’에서 새 지오메트리 캐시를 생성(Create)합니다.

69
00:06:53,960 --> 00:06:55,040
그리고 저장(Save)합니다.

70
00:06:56,080 --> 00:07:00,120
이 두 가지가 준비되었으니, 이제 지오메트리 캐시를 생성할 준비가 됐습니다.

71
00:07:00,400 --> 00:07:04,360
버튼을 눌러 지오메트리 캐시를 생성하세요.

72
00:07:08,070 --> 00:07:09,150
생성이 시작되었습니다.

73
00:07:14,650 --> 00:07:21,770
시뮬레이션 결과를 바탕으로 피부 위치만 보간하는 작업이기 때문에, 시뮬레이션 자체보다 훨씬 빠르게 끝납니다.

74
00:07:22,910 --> 00:07:25,910
결과를 확인하려면 지오메트리 캐시를 열어보면 됩니다.

75
00:07:26,210 --> 00:07:27,590
더블 클릭해서 열어보죠.

76
00:07:34,470 --> 00:07:36,190
여기 피부 메쉬가 보입니다.

77
00:07:37,510 --> 00:07:44,580
재생하면서 하부 대흉근 부분을 유심히 봐 주세요.

78
00:07:44,940 --> 00:07:48,720
지방층에서 온 변형이 피부로 잘 전달된 것을 볼 수 있습니다.

79
00:07:48,900 --> 00:07:51,920
이제 피부 표면에서도 근육 수축이 뚜렷하게 보이죠.

80
00:08:00,190 --> 00:08:04,790
정리하면, 우리는 근육과 지방층에 대해 쿼지정적 시뮬레이션을 돌렸습니다.

81
00:08:05,410 --> 00:08:09,530
그리고 그 시뮬레이션 결과에서 피부 지오메트리 캐시를 생성했습니다.

82
00:08:09,530 --> 00:08:22,910
다음 영상에서는 이 지오메트리 캐시를 사용해 ML Deformer를 학습시키고, 물리와 생체역학을 반영한 피부 변형을 캐릭터에 적용해 보겠습니다.
