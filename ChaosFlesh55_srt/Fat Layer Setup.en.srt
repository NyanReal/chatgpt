1
00:00:03,080 --> 00:00:06,540
In the last video, we ran a quadistatic muscle simulation with collision and muscle contraction.

2
00:00:06,840 --> 00:00:10,160
In this video, we'll add the fat layer on top of the muscles instead of a coupled muscle and fat simulation.

3
00:00:10,580 --> 00:00:12,380
Let's first take a look at the fat static mesh.

4
00:00:14,300 --> 00:00:17,820
Over here, let's open that. You can see the vertex count here, the number of vertices here, is really high.

5
00:00:18,360 --> 00:00:22,200
That means when you're running a TetWild or CreateTeproHeader node on this static mesh converted to collection,

6
00:00:22,660 --> 00:00:26,500
the runtime will be really, really high. So let's go ahead and downsample the static mesh here.

7
00:00:27,600 --> 00:00:30,160
So right-click and then duplicate the static mesh here.

8
00:00:31,760 --> 00:00:32,820
I'm going to call this one the downsample.

9
00:00:33,800 --> 00:00:38,700
And then you can drag this one into the environment and then reset the location so that it's the best location.

10
00:00:38,960 --> 00:00:40,900
Press F to zoom in onto the static mesh here.

11
00:00:41,860 --> 00:00:44,220
Over here, the selection mode, let's go ahead and change that to the modeling mode.

12
00:00:45,040 --> 00:00:47,300
And now we can go to mesh and then simplify.

13
00:00:48,700 --> 00:00:49,960
This will open up the Simplification tool.

14
00:00:50,920 --> 00:00:53,160
For simplifier type, instead of QEM, let's use existing positions.

15
00:00:53,560 --> 00:00:56,220
We're trying our best to preserve the shape of our static mesh.

16
00:00:57,040 --> 00:00:58,420
For talking mode, let's use vertex count.

17
00:00:59,340 --> 00:01:01,600
Let's set our ideal vertex count to be 30,000.

18
00:01:03,040 --> 00:01:06,220
For this example, we need to check this discard attribute for simplification to work.

19
00:01:06,500 --> 00:01:08,320
Now you can see we've got a different topology.

20
00:01:08,480 --> 00:01:11,020
And this one is much worse than before.

21
00:01:11,920 --> 00:01:13,040
Hit accept to accept this result.

22
00:01:13,420 --> 00:01:14,980
And make sure you save this new static mesh.

23
00:01:17,100 --> 00:01:20,040
Now we can go to the tetrahedral meshes folder and then work on the tetrahedral mesh for the fat layer.

24
00:01:20,320 --> 00:01:22,380
Same thing as the muscles, let's create a new flesh asset.

25
00:01:23,780 --> 00:01:25,280
I'm going to call this one the fat tetrahedral mesh.

26
00:01:25,940 --> 00:01:26,500
Flesh asset.

27
00:01:27,900 --> 00:01:28,880
Create a new dataflow asset.

28
00:01:30,800 --> 00:01:32,600
The first node we're going to create is the static mesh.

29
00:01:32,920 --> 00:01:34,640
Let's bring in the static mesh we just created.

30
00:01:36,380 --> 00:01:38,020
There is our downsampled static mesh.

31
00:01:38,580 --> 00:01:42,100
We can convert the static mesh to a collection using the static mesh to a collection node.

32
00:01:42,960 --> 00:01:45,800
Note that over here you have choices of split components of the static mesh.

33
00:01:45,900 --> 00:01:46,740
That means if you have...

34
00:01:46,740 --> 00:01:50,480
For example, if your muscles were a static mesh, then you want to split components and then split muscles into different geometries.

35
00:01:50,660 --> 00:01:51,400
In this case, it doesn't really matter.

36
00:01:51,460 --> 00:01:52,300
So we just leave that as off.

37
00:01:53,220 --> 00:01:54,060
Connect that static mesh here.

38
00:01:55,080 --> 00:01:57,500
This will convert our fat layer into a collection.

39
00:01:57,700 --> 00:02:00,920
So over here in the construction viewport, you can press F to zoom in onto the fat layer.

40
00:02:01,100 --> 00:02:01,860
There is the static mesh.

41
00:02:04,420 --> 00:02:06,960
Next, let's create a tetrahedral mesh using the create tetrahedral node.

42
00:02:07,900 --> 00:02:12,680
For the parameters, you can go back to the first video where I'll explain the parameters in a while here.

43
00:02:13,440 --> 00:02:15,100
Over here, let's use the optimal parameters I found.

44
00:02:15,280 --> 00:02:19,280
In this case, you actually want to use a lower Fs for L value because this set mesh is really thin.

45
00:02:19,460 --> 00:02:21,680
And then you want the surface of the tetrahedral mesh to track that closely.

46
00:02:21,760 --> 00:02:23,380
So that doesn't leave any holes in your tetrahedral mesh.

47
00:02:23,380 --> 00:02:24,440
Especially in thin regions.

48
00:02:25,520 --> 00:02:27,740
So let's go ahead and change that to be 0.0001.

49
00:02:27,860 --> 00:02:28,940
So one order of magnitude down.

50
00:02:29,540 --> 00:02:30,480
Same thing, check that course in box.

51
00:02:31,140 --> 00:02:35,480
In this case, we'll not have any collection here because we don't need a transform attribute anymore.

52
00:02:35,680 --> 00:02:37,020
We already have the transform attributes stored in the muscles.

53
00:02:37,420 --> 00:02:41,560
And eventually we'll append this fat tetrahedral mesh onto the muscles so that they share the same transform attributes.

54
00:02:42,080 --> 00:02:43,900
So the only thing we need to do is collect the collection to the source collection.

55
00:02:44,440 --> 00:02:46,760
And now the node is real frozen, it starts to evaluate the node.

56
00:02:48,500 --> 00:02:51,520
Alright, so we waited about 15 minutes for this node to finish the evaluation.

57
00:02:52,120 --> 00:02:55,540
Let's go ahead and check this tetrahedral mesh that's created from the stack mesh of the fat layer.

58
00:02:56,220 --> 00:02:57,940
We go to vertices and check the vertex count there.

59
00:02:58,260 --> 00:02:59,100
52,000 vertices.

60
00:02:59,740 --> 00:03:01,540
The last node we'll create is the terminal node.

61
00:03:02,540 --> 00:03:02,900
FleshAssetTerminal.

62
00:03:03,000 --> 00:03:06,140
Now we can save the tetrahedral mesh collection into our flesh asset here.

63
00:03:07,000 --> 00:03:08,980
Let's go ahead and save the full flesh asset.

64
00:03:09,760 --> 00:03:11,160
Then we're gonna do the same thing as we did for the muscles.

65
00:03:11,380 --> 00:03:13,280
We're gonna start a new flesh asset for the setup.

66
00:03:13,440 --> 00:03:14,300
Let's go into the flesh asset folder.

67
00:03:15,000 --> 00:03:15,840
Create a new flesh asset.

68
00:03:17,800 --> 00:03:22,140
I can call this one Muscle Setup. Create a new dinner flow asset.

69
00:03:23,720 --> 00:03:30,620
And now the first node is of course importing the Muscle Flesh Asset as well as the Fat Flesh Asset.

70
00:03:31,540 --> 00:03:34,160
So let's go ahead and grab the Muscle Setup Flesh Asset that contains our Muscle Setup.

71
00:03:34,980 --> 00:03:36,100
Call this one the Muscle Asset.

72
00:03:37,940 --> 00:03:42,000
We also need another one to import the tetrakeletal metric of the fat layer that we just created.

73
00:03:42,540 --> 00:03:44,720
In this case, it's a Fat Tetrakeletal metric Flesh Asset.

74
00:03:45,680 --> 00:03:48,080
At this point, we need to set some mass and stiffness properties on the fat layer,

75
00:03:48,320 --> 00:03:49,080
as we haven't done that.

76
00:03:49,960 --> 00:03:51,600
So creating SetFleshDefault properties.

77
00:03:52,680 --> 00:03:57,980
For this node, we'll set Density to be 100 and Vertex Stiffness to be 10,000.

78
00:03:58,560 --> 00:04:03,120
Note that the Density and Vertex Stiffness are both one order of magnitude lower than the one from Muscles,

79
00:04:03,220 --> 00:04:07,960
because we want the deformation of the Muscles to dominate the fat layer so that we're able to see the muscle contractions.

80
00:04:08,340 --> 00:04:12,660
If they're approximately the same, say the Vertex Stiffness is the same as the one we use for Muscles,

81
00:04:12,660 --> 00:04:16,020
then the elasticity will kill the Muscle deformation because we have elasticity in the fat layer.

82
00:04:17,060 --> 00:04:18,880
Now let's create an append node.

83
00:04:19,200 --> 00:04:20,520
We're going to use append the tetrakeletal collection.

84
00:04:21,280 --> 00:04:23,120
This will take two collections, Collection 1 and Collection 2.

85
00:04:23,400 --> 00:04:26,660
This will put Collection 2 attributes to the front and then Collection 1 attributes to the end.

86
00:04:27,120 --> 00:04:30,460
Let's go ahead and connect Muscles here and also the fat layer here.

87
00:04:31,140 --> 00:04:33,020
You can see now everything is being appended together.

88
00:04:33,600 --> 00:04:34,540
The number of vertices there.

89
00:04:35,020 --> 00:04:37,700
When we append collections, attribute values that depend on the size of other groups,

90
00:04:37,700 --> 00:04:41,360
For example, attributes that depend on from size of vertices, or size of geometry , those will

91
00:04:41,360 --> 00:04:45,280
get updated automatically. So one example is, if it goes to muscle activation here, you can see the

92
00:04:45,280 --> 00:04:49,000
Geometry group index is 28 and 58. That's dependent on the geometry group. But prior to the collection,

93
00:04:49,220 --> 00:04:52,940
if you go to just the muscle assets, and muscle activation now these are 27 and 57, the reason

94
00:04:52,940 --> 00:04:57,840
is that we have the fat layer here that bumps the Geometry group up by one. Now we can click this node

95
00:04:57,840 --> 00:05:01,620
here and press F, so that we can see the coupled collection here, we can see it contains both

96
00:05:01,620 --> 00:05:05,540
muscles and the fat layer. So let's create some weak constraints or positioned target constraints

97
00:05:06,420 --> 00:05:09,500
We can do this through the set vertex triangle position target binding.

98
00:05:11,460 --> 00:05:19,380
By default, this node creates springs between every pair of closed-by connected geometries. So in this case, it will create springs between muscles, muscles, and muscle muscles, and fat.

99
00:05:20,500 --> 00:05:26,100
Especially, it will create springs between the outer surface of the fat layer and the muscles, because sometimes the fat layer is thin and they're getting too close.

100
00:05:26,260 --> 00:05:31,120
So we want to avoid that by specifying only the inner side of the fat layer to get weak constraints bound to the muscles.

101
00:05:31,680 --> 00:05:34,900
We can do this through painting and then eventually specifying a vertex selection over here.

102
00:05:35,740 --> 00:05:38,640
So let's go ahead and get the StagMesh to Collection node.

103
00:05:39,700 --> 00:05:41,200
We can set the StagMesh to be our FatLayer.

104
00:05:42,340 --> 00:05:43,380
Remember we used the down-sampled one.

105
00:05:44,080 --> 00:05:47,480
Then we can paint on the StagMesh and then transfer the Attributes onto the Tetriqueter mesh.

106
00:05:48,140 --> 00:05:50,180
So let's go ahead and create an AddWeekMap.

107
00:05:51,320 --> 00:05:53,180
That will create an AddScalarMurfixProperty node.

108
00:05:53,580 --> 00:05:56,020
And then we can select the FatLayer and start painting on that.

109
00:05:56,260 --> 00:05:59,280
In this case we want to use the Brush Tool, set Strength to be 1,

110
00:06:00,140 --> 00:06:04,180
and then set VisibilityFilter to be un-occluded, because we don't want to paint anything on the inner side.

111
00:06:04,180 --> 00:06:10,680
The strategy is we're going to paint on the outer side of the fat layer, and then revert the selection so that we have a painting of the inner layer.

112
00:06:11,140 --> 00:06:12,720
Let's go ahead and paint the outer surface.

113
00:06:16,650 --> 00:06:18,110
Sometimes you see that these triangles are missing.

114
00:06:18,430 --> 00:06:21,710
That means you need to adjust to a different angle and then you can grab those.

115
00:06:25,710 --> 00:06:28,670
Now I've spent a few minutes to perfect my painting on the outer surface.

116
00:06:28,890 --> 00:06:32,730
After that, we can invert the painting here by selecting this Invert Current Surface button.

117
00:06:33,310 --> 00:06:36,190
That will basically invert the painting attributes on the surface.

118
00:06:36,590 --> 00:06:44,450
Note that this Invert Current button will invert everything on all vertices, meaning that any internal vertices will also get the attributes inverted.

119
00:06:44,670 --> 00:06:46,010
In this case, we only want to invert the surface.

120
00:06:46,170 --> 00:06:49,850
So make sure you select this button, click Accept, and then make sure we assign a name for this.

121
00:06:49,990 --> 00:06:51,550
Let's call this one the Inner Fat.

122
00:06:53,030 --> 00:06:54,830
Now we can transfer onto the fat layer.

123
00:06:56,690 --> 00:07:00,310
So let's go ahead and then drag this out and create a Transfer Vertex Attribute node.

124
00:07:01,650 --> 00:07:04,210
Then for From Collection, let's connect that as well as the Attribute Key.

125
00:07:06,190 --> 00:07:07,330
I can replace the Collection here.

126
00:07:09,170 --> 00:07:12,830
Now this Combined Collection should also contain the Inner Fat Attribute I just created.

127
00:07:13,970 --> 00:07:16,390
So let's grab the Vertex Selection from this Attribute.

128
00:07:16,730 --> 00:07:19,490
The node that we'll use is Collection Select by Attribute.

129
00:07:20,630 --> 00:07:21,690
Let's go ahead and connect that Collection.

130
00:07:22,030 --> 00:07:23,310
Also connect the Attribute Key here.

131
00:07:23,810 --> 00:07:26,390
And over here, because we have Group and Attribute connected, we can simply ignore these.

132
00:07:26,950 --> 00:07:29,690
For operation, we're selecting vertices based on this operation.

133
00:07:29,690 --> 00:07:34,010
So let's set that to be greater than, because we're selecting anything that's 1, then set the value to be 0.5.

134
00:07:34,630 --> 00:07:38,630
And the logic is that any vertex that has that attribute greater than 0.5 will be selected.

135
00:07:39,090 --> 00:07:41,770
And now that will return a vertex selection of the Inner Fat node.

136
00:07:42,110 --> 00:07:44,790
Let's connect that, and also connect Collection here.

137
00:07:45,650 --> 00:07:49,790
Before that, let's go ahead and adjust the parameter of the Target Stiffuse here and set that to be 10.

138
00:07:50,350 --> 00:07:54,970
And then the vertex radius ratio to be 0.004, and connect Collection there.

139
00:07:55,970 --> 00:07:59,350
Now we'll build some weak constraints between the Inner Fat and the Muscles.

140
00:07:59,530 --> 00:08:02,850
We can visualize the results again by calling this Visualized Position Target node.

141
00:08:03,430 --> 00:08:11,110
We have that rendered, then we can see all the weak constraints that's on this Collection, including the Muscle and Muscle Constraints, really.

142
00:08:13,710 --> 00:08:16,470
You see these smaller ones, these are the ones between the Inner Fat and the Muscles.

143
00:08:20,210 --> 00:08:22,450
This is a way to check whether you're getting a sufficient amount of weak constraints.

144
00:08:25,510 --> 00:08:34,410
Now that we have weak constraints between the Muscles and the Fat layer, we really don't have any muscles along the spine or around the clavicle.

145
00:08:34,630 --> 00:08:39,310
So let's go ahead and bring in the bones for visualization.

146
00:08:42,830 --> 00:08:47,790
You can set the sculpt mesh to be the bones, and have that, and also the Muscles selected, the Muscle and Fat.

147
00:08:50,110 --> 00:08:58,410
If you go to the Muscle here, here, and then having the bones also visualize here, you can actually copy and paste the note.

148
00:09:00,590 --> 00:09:07,230
Let's go ahead and copy and paste, Ctrl-C and Ctrl-V. You can see the bones here.

149
00:09:07,230 --> 00:09:13,170
You can see there are no muscles around the clavicle and also along the spine here.

150
00:09:13,550 --> 00:09:28,760
And we're going to need some constraints between the Fat layer and the bones on those reasons, because we don't have anything else to drive the Fat layer.

151
00:09:29,040 --> 00:09:30,500
So let's go ahead and create some Kinematic constraints.

152
00:09:33,420 --> 00:09:36,500
Let's use Set Flesh Bone Position Target Binding. Again, set this one to Kinematic.

153
00:09:37,440 --> 00:09:42,600
Then for Radius Ratio, it's set to be 0.002. And then for Scalzo Mesh, let's give that bone Scalzo Mesh.

154
00:09:45,000 --> 00:09:45,740
Let's connect that.

155
00:09:47,820 --> 00:09:49,460
Now we can also visualize Kinematic Faces.

156
00:09:52,380 --> 00:09:55,740
Let's go ahead and check if we have anything on the clavicle.

157
00:09:55,740 --> 00:10:01,580
You can see now these are the Kinematic Faces along the clavicle and also along the ribcage, or the sternum.

158
00:10:01,660 --> 00:10:03,760
Also some along the spine, which is good. That provides extra constraints.

159
00:10:04,240 --> 00:10:06,940
We also have some around the elbow, which is really good. We don't have much muscles there.

160
00:10:08,680 --> 00:10:12,420
And finally, let's save this into a terminal. It's called the Flesh Asset Terminal node.

161
00:10:13,280 --> 00:10:15,200
And then save the collection into the Flesh Asset.

162
00:10:16,380 --> 00:10:18,880
Ctrl-S, we can save the progress of setup here.

163
00:10:19,480 --> 00:10:22,260
As a recap, we created a coupled Flesh Asset of both the Muscles and the Fat layer.

164
00:10:22,580 --> 00:10:24,540
We set up some Kinematic and also weak constraints on the Fat layer.

165
00:10:24,840 --> 00:10:27,300
In the next video, we'll run a quality-side simulation on the coupled asset.

