javascript:(async()=>{const l=u=>new Promise(r=>{const s=document.createElement(‘script’);s.src=u;s.onload=r;document.head.appendChild(s)});await l(‘https://cdn.jsdelivr.net/npm/jszip@3.10.1/dist/jszip.min.js’);await l(‘https://cdn.jsdelivr.net/npm/file-saver@2.0.5/dist/FileSaver.min.js’);const q=(r,…a)=>{for(const sel of a){const e=(r||document).querySelector(sel);if(e)return e}return null},t=e=>e?e.textContent.trim():’’,S=s=>s.replace(/[\/:*?”<>|]+/g,’_’).trim()||‘arcalive’,A=u=>{try{return new URL(u,document.baseURI).href}catch{return u}},E=u=>{const m=(u.split(’?’)[0].split(’#’)[0].match(/.(jpe?g|png|gif|webp|avif|bmp|svg)$/i));return m?m[1].toLowerCase():‘jpg’};const art=q(null,‘body div.article-body > div.fr-view.article-content’,‘div.article-body .article-content’,‘article .article-content’,‘main .article-content’,‘main article’);if(!art){alert(‘본문을 찾지 못했습니다. 페이지 구조가 바뀐 듯 합니다.’);return}const title=S(t(q(null,’.article-title’,‘h1.title’,‘h1’))||document.title||‘arcalive’);const author=t(q(null,’.article-writer’,’.writer .name’,’.article-header .writer’,’.user-info .user-name’,‘a.member’,’.nickname’,’.author’,’[rel=“author”]’));let dateText=’’,dateISO=’’;const time=q(null,‘time[datetime]’,‘time’,’.date’,’.article-info .date’,’.article-header .date’,’.post-date’);if(time){dateText=t(time);dateISO=time.getAttribute(‘datetime’)||’’}const url=location.href;const c=art.cloneNode(true);c.querySelectorAll(‘script,style,noscript’).forEach(n=>n.remove());c.querySelectorAll(’[contenteditable]’).forEach(n=>n.removeAttribute(‘contenteditable’));const imgs=[…c.querySelectorAll(‘img’)];imgs.forEach((img,i)=>{const idx=String(i+1).padStart(3,‘0’);const src=img.getAttribute(‘data-src’)||img.getAttribute(‘data-original’)||img.getAttribute(‘src’)||’’;const e=E(src||’’);const p=images/img_${idx}.${e};img.setAttribute(‘data-zip-path’,p);img.removeAttribute(‘srcset’);img.removeAttribute(‘crossorigin’);img.setAttribute(‘src’,src)});const styles=<meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"><title>${title}</title><style>body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Apple SD Gothic Neo,Noto Sans KR,Helvetica,Arial,sans-serif;line-height:1.6;padding:2rem;max-width:860px;margin:0 auto;word-break:break-word}header.meta{border:1px solid #e5e7eb;border-radius:8px;padding:12px 14px;margin:0 0 18px 0;background:#fafafa}header.meta .row{display:flex;gap:8px;flex-wrap:wrap;font-size:.95rem;color:#374151}header.meta a{color:#2563eb;text-decoration:none;word-break:break-all}header.meta a:hover{text-decoration:underline}img{max-width:100%;height:auto}</style>;const meta=[<div class="row"><strong>제목:</strong><span>${title}</span></div>,author?<div class="row"><strong>작성자:</strong><span>${author}</span></div>:’’,(dateText||dateISO)?<div class="row"><strong>작성일:</strong><time ${dateISO?datetime=”${dateISO}”:''}>${dateText||dateISO}</time></div>:’’,<div class="row"><strong>원문 링크:</strong><a href="${url}">${url}</a></div>].join(’’);const head=<header class="meta">${meta}</header>;const zip=new JSZip();async function buf(u){const r=await fetch(u,{credentials:‘include’});if(!r.ok)throw new Error(‘HTTP ‘+r.status);return r.arrayBuffer()}let ok=0;for(const img of imgs){const p=img.getAttribute(‘data-zip-path’);const s=img.getAttribute(‘src’)||’’;if(!s)continue;try{const b=await buf(A(s));zip.file(p,b);ok++}catch(e){console.warn(‘이미지 다운로드 실패:’,s,e)}}const off=art.cloneNode(true);off.querySelectorAll(‘script,style,noscript’).forEach(n=>n.remove());off.querySelectorAll(’[contenteditable]’).forEach(n=>n.removeAttribute(‘contenteditable’));[…off.querySelectorAll(‘img’)].forEach((img,i)=>{const idx=String(i+1).padStart(3,‘0’);const src=img.getAttribute(‘data-src’)||img.getAttribute(‘data-original’)||img.getAttribute(‘src’)||’’;const e=E(src||’’);const p=images/img_${idx}.${e};img.removeAttribute(‘srcset’);img.setAttribute(‘src’,p)});const html=<!doctype html><html><head>${styles}</head><body>${head}${off.outerHTML}</body></html>;zip.file(‘index.html’,html);zip.file(‘README.txt’,Saved from: ${url}\nTitle: ${title}\nAuthor: ${author||'-'}\nDate(Text): ${dateText||'-'}\nDate(ISO): ${dateISO||'-'}\nSaved at: ${new Date().toISOString()}\nImages saved: ${ok}/${imgs.length}\n);const blob=await zip.generateAsync({type:‘blob’});saveAs(blob,${title}.zip);})();