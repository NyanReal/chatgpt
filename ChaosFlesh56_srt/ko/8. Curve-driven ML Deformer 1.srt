1
00:00:01,400 --> 00:00:08,300
지난 영상에서는 포즈 변화에 따라 버텍스 델타를 적용하는 ML 디포머를 학습시켰습니다.

2
00:00:09,280 --> 00:00:12,620
이번에는 근육 활성화를 포즈와 독립적으로 제어하고 싶다면 어떻게 할까요?

3
00:00:13,160 --> 00:00:18,260
예를 들어 말은 가만히 서 있어도 둔근을 수축시키는 경우가 있습니다.

4
00:00:18,980 --> 00:00:24,340
위쳐 4 테크 데모에서는 애니메이션 커브로 근육 활성화를 제어했습니다.

5
00:00:24,640 --> 00:00:28,900
지금부터 에밀(Emil) 예제를 사용해 그 방법을 보여드리겠습니다.

6
00:00:29,820 --> 00:00:33,900
먼저 에밀의 Flesh 에셋으로 돌아가겠습니다.

7
00:00:35,100 --> 00:00:39,860
이번에는 하부 대흉근(lower pectoralis)과 이두근(bicep)을 다룰 것이므로,

8
00:00:39,980 --> 00:00:44,460
애니메이션 커브를 몇 개 만들어보겠습니다.

9
00:00:46,180 --> 00:00:49,140
스킨용 스켈레탈 메시를 찾습니다.

10
00:00:50,680 --> 00:00:53,380
해당 에셋을 열고 여기서 ‘Add Curve’를 클릭하세요.

11
00:00:54,820 --> 00:00:56,840
먼저 이두근 커브를 추가하고,

12
00:00:59,080 --> 00:01:01,120
하부 대흉근 커브도 추가합니다.

13
00:01:03,720 --> 00:01:06,440
이제 여기 커브들이 생겼습니다.

14
00:01:10,380 --> 00:01:17,300
이제 돌아가서 스켈레탈 메시의 커브를 읽어들이도록 하겠습니다.

15
00:01:17,480 --> 00:01:18,820
우선 이 상태를 저장하고,

16
00:01:19,900 --> 00:01:25,220
여기서 ‘Read Skeletal Mesh Curves’ 노드를 호출합니다.

17
00:01:25,220 --> 00:01:33,460
이 노드는 스켈레탈 메시의 커브를 읽어서 Flesh 에셋에 저장해 연결을 만들어 줍니다.

18
00:01:35,040 --> 00:01:40,060
방금 작업한 그 스켈레탈 메쉬를 여기에 지정하고,

19
00:01:42,040 --> 00:01:45,480
그럼 스켈레탈 메시 체인들을 가져올 수 있습니다.

20
00:01:46,180 --> 00:01:50,060
보시다시피 커브 두 개가 가져와졌습니다.

21
00:01:50,680 --> 00:01:52,800
하나는 이두근, 다른 하나는 하부 대흉근이죠.

22
00:01:53,900 --> 00:01:56,160
그리고 여기 컬렉션 연결을 잊지 마세요.

23
00:01:56,780 --> 00:02:07,080
하지만 여기 Muscle Name에서, 각 커브가 어느 근육을 제어하는지 알 수 있도록 근육과의 연결(Association)을 지정해야 합니다.

24
00:02:09,120 --> 00:02:13,160
이를 위해 해당 근육 메쉬를 선택하면 됩니다.

25
00:02:14,740 --> 00:02:16,020
여기서 시각화해 보죠.

26
00:02:16,500 --> 00:02:18,240
먼저 이두근부터 하겠습니다.

27
00:02:18,520 --> 00:02:25,820
이두근을 클릭하면 씬 아웃라이너에 해당 메쉬 이름이 표시됩니다.

28
00:02:26,060 --> 00:02:28,020
이걸 정확히 선택해 주세요.

29
00:02:32,050 --> 00:02:37,910
이름은 ‘SKM_Emil_UpperBody_Muscles_SplitMesh_58_10_15_10’처럼 되어 있습니다.

30
00:02:40,970 --> 00:02:47,210
이제 ‘Read Skeletal Mesh Curves’ 쪽에서도 동일한 메쉬 이름을 볼 수 있어야 합니다.

31
00:02:49,190 --> 00:02:50,130
58, 57.

32
00:02:50,530 --> 00:02:52,350
이 값을 복사해 두고,

33
00:02:53,210 --> 00:02:55,770
현재는 수동으로 입력해야 합니다.

34
00:02:56,490 --> 00:03:01,050
이름은 ‘SKM_Emil_UpperBody_Muscles’이고,

35
00:03:03,070 --> 00:03:07,530
SplitMesh_58_57 입니다.

36
00:03:08,170 --> 00:03:14,830
나중에는 씬 아웃라이너에서 이름을 직접 복사할 수 있는 기능을 추가할 예정입니다.

37
00:03:15,950 --> 00:03:17,770
이두근에 대해 이렇게 설정해 주고,

38
00:03:18,810 --> 00:03:21,290
대흉근도 같은 방식으로 설정합니다.

39
00:03:24,810 --> 00:03:26,650
해당 이름은 28, 27입니다.

40
00:03:30,320 --> 00:03:31,720
다시 이쪽으로 돌아와서,

41
00:03:32,980 --> 00:03:33,860
복사해 넣고,

42
00:03:38,760 --> 00:03:41,240
28, 27로 입력합니다.

43
00:03:45,520 --> 00:03:46,280
좋습니다.

44
00:03:46,840 --> 00:03:50,620
그리고 ‘Assign Skeletal Mesh Curves To Muscles’를 눌러 주세요.

45
00:03:51,800 --> 00:03:56,740
이제 애니메이션 커브와 근육 간의 연결이 생성됩니다.

46
00:03:56,740 --> 00:04:01,100
그럼 Muscle Activation 탭으로 넘어가 보겠습니다.

47
00:04:03,380 --> 00:04:10,520
여기서 방금 설정한 근육 연결 정보가 보일 겁니다.

48
00:04:10,760 --> 00:04:12,820
근육 활성화 커브 이름도 표시되죠.

49
00:04:13,080 --> 00:04:15,500
즉, 각 근육마다 연결된 커브가 하나씩 있습니다.

50
00:04:17,000 --> 00:04:18,040
잘 설정되었습니다.

51
00:04:18,260 --> 00:04:23,040
이 정보를 Flesh 에셋이 알 수 있도록 터미널에 다시 연결해 줍니다.

52
00:04:26,250 --> 00:04:32,990
이제 커브 기반 ML 디포머를 위한 트레이닝 애니메이션을 생성해 보겠습니다.

53
00:04:33,330 --> 00:04:42,130
ML Deformer 설정을 보면 입력은 두 가지일 수 있습니다. 본(포즈)을 입력으로 쓰면 포즈 기반 ML 디포머가 되고,

54
00:04:42,130 --> 00:04:46,850
애니메이션 커브를 입력으로 쓰면 커브 기반 ML 디포머가 됩니다.

55
00:04:47,010 --> 00:04:52,590
둘 다 버텍스에 델타를 적용하지만 입력 방식이 다릅니다.

56
00:04:53,070 --> 00:05:01,310
예를 들어 이두근에 대한 커브가 있다면, 슬라이더를 위아래로 움직여 각 포즈에서 근육 수축 정도를 조절할 수 있겠죠.

57
00:05:01,310 --> 00:05:05,510
이 제어는 포즈 기반 ML 디포머와는 독립적으로 동작합니다.

58
00:05:06,370 --> 00:05:09,950
그럼 돌아와서 트레이닝용 애니메이션을 생성하겠습니다.

59
00:05:10,550 --> 00:05:16,410
여기서 사용할 것은 ‘Curve Sampling Animation Asset’ 터미널(노드)입니다.

60
00:05:17,470 --> 00:05:20,310
이 노드는 두 가지 입력을 받습니다.

61
00:05:21,450 --> 00:05:23,470
첫 번째는 스켈레탈 메시 에셋이고,

62
00:05:24,650 --> 00:05:30,030
여기서는 방금 커브를 추가했던 스킨 메시가 대상입니다.

63
00:05:30,170 --> 00:05:31,250
방금 커브 두 개를 추가했죠.

64
00:05:31,810 --> 00:05:33,830
두 번째 입력은 애니메이션 에셋입니다.

65
00:05:34,710 --> 00:05:37,830
애니메이션 에셋을 하나 복제해서,

66
00:05:40,450 --> 00:05:44,230
아무 것이나 선택해 복제합니다.

67
00:05:50,300 --> 00:05:56,640
복제본의 이름은 ‘Activation_Training_Data’로 하겠습니다.

68
00:06:00,240 --> 00:06:00,980
좋아요.

69
00:06:01,720 --> 00:06:02,380
저장해 주고,

70
00:06:02,880 --> 00:06:06,480
이제 여기서 방금 만든 애니메이션 에셋을 할당합니다.

71
00:06:07,320 --> 00:06:08,760
‘Activation_Training_Data’를 선택하세요.

72
00:06:09,900 --> 00:06:18,240
이 노드는 학습용 데이터를 생성해 지정한 애니메이션 에셋 안에 넣어주는 역할을 합니다.

73
00:06:18,240 --> 00:06:19,960
원본을 건드리지 않기 위해 복제본을 사용한 것이죠.

74
00:06:20,100 --> 00:06:22,660
그래서 아까 애니메이션 에셋을 복제한 겁니다.

75
00:06:23,540 --> 00:06:30,040
각 근육(각 커브)마다 여기 설정한 프레임 수만큼 학습 데이터를 만들어 줍니다.

76
00:06:30,940 --> 00:06:40,120
이번에는 프레임 레이트를 30, 커브당 20프레임으로 설정하겠습니다.

77
00:06:40,720 --> 00:06:46,660
이제 실행(Evaluate)하면 애니메이션 에셋이 준비됩니다.

78
00:06:46,660 --> 00:06:49,900
여기 보시면 커브가 두 개 있고,

79
00:06:50,380 --> 00:06:59,900
각 커브는 할당된 구간에서 0에서 1까지 값을 갖습니다. 이두근은 0~20프레임 구간이고,

80
00:07:00,020 --> 00:07:02,740
하부 대흉근은 20~40프레임 구간입니다.

81
00:07:04,220 --> 00:07:13,620
이제 이 트레이닝 애니메이션을 대상으로 시뮬레이션 데이터를 생성하겠습니다.

82
00:07:13,620 --> 00:07:18,800
애니메이션으로 방금 만든 트레이닝 데이터를 지정하고,

83
00:07:20,700 --> 00:07:25,000
전체 프레임 수는 40프레임이 됩니다.

84
00:07:27,920 --> 00:07:32,200
대략 1.34초 정도죠.

85
00:07:35,360 --> 00:07:41,020
그리고 새로운 Chaos Cache 컬렉션을 하나 만들어야 합니다.

86
00:07:42,620 --> 00:07:47,120
이름은 ‘Activation_Training_ChaosCache_Collection’으로 하겠습니다.

87
00:07:48,600 --> 00:07:49,380
좋습니다.

88
00:07:49,640 --> 00:07:54,060
마지막으로 기억할 점이 하나 더 있습니다.

89
00:07:54,420 --> 00:07:57,220
지금까지는 근육 길이에 기반해 자동으로 활성화되도록 했는데,

90
00:07:57,220 --> 00:08:02,260
즉, 애니메이션으로 근육 길이가 짧아지면 근육이 수축되도록 했습니다.

91
00:08:02,700 --> 00:08:09,100
이제 그 기능은 끄고, 대신 ‘근육 활성화 애니메이션 커브’로 덮어쓰겠습니다.

92
00:08:09,940 --> 00:08:11,620
이 옵션을 켜는 것을 잊지 마세요.

93
00:08:13,980 --> 00:08:17,240
이제 설정이 좋아 보입니다.

94
00:08:17,740 --> 00:08:20,980
저장한 뒤 시뮬레이션을 실행하세요.

95
00:08:26,260 --> 00:08:28,740
좋아요, 시뮬레이션이 방금 완료되었습니다.

96
00:08:29,320 --> 00:08:31,260
결과를 살펴보겠습니다.

97
00:08:31,420 --> 00:08:34,780
0~20프레임 구간에서 이두근이 수축하기 시작하고,

98
00:08:35,220 --> 00:08:37,220
수축했다가 다시 꺼집니다.

99
00:08:37,340 --> 00:08:39,380
그리고 20프레임 이후에는 하부 대흉근이 동작하죠.

100
00:08:39,920 --> 00:08:41,760
바로 우리가 원하던 동작입니다.

101
00:08:42,000 --> 00:08:44,540
그리고 포즈 변화는 전혀 없습니다.

102
00:08:44,700 --> 00:08:48,240
그냥 정지 포즈, 즉 레스트 포즈만 사용했습니다.

103
00:08:49,000 --> 00:08:52,700
이것만으로 커브 기반 ML 디포머를 학습하기에 충분합니다.

104
00:08:52,700 --> 00:09:01,480
그럼 이 시뮬레이션 데이터를 이용해서 지오메트리 캐시를 생성하겠습니다.

105
00:09:02,500 --> 00:09:03,380
여기서 진행할게요.

106
00:09:03,600 --> 00:09:05,500
새 지오메트리 캐시를 생성하고,

107
00:09:06,860 --> 00:09:07,620
좋습니다.

108
00:09:08,640 --> 00:09:10,680
스킨에 대한 지오메트리 캐시도 만들어 줍니다.

109
00:09:11,300 --> 00:09:14,700
이 지오메트리 캐시를 사용해 ML 디포머를 학습시킬 겁니다.

110
00:09:16,760 --> 00:09:17,280
아주 좋아요.

111
00:09:17,540 --> 00:09:18,160
됐습니다.

112
00:09:18,400 --> 00:09:19,540
이제 스킨 쪽을 보면,

113
00:09:19,780 --> 00:09:22,280
이두근이 수축하고 이어서 하부 대흉근이 수축하는 걸 볼 수 있습니다.

114
00:09:22,280 --> 00:09:23,460
좋아요.

115
00:09:23,460 --> 00:09:23,500
좋아요.
