1
00:00:01,210 --> 00:00:08,370
지난 영상에서는 에밀(Emil) 캐릭터의 모든 에셋을 가져오고 필요한 플러그인을 모두 활성화했습니다.

2
00:00:08,930 --> 00:00:11,490
이제 근육 시뮬레이션 설정을 시작해봅시다.

3
00:00:12,630 --> 00:00:15,690
먼저 FleshAssets라는 폴더를 만들겠습니다.

4
00:00:17,670 --> 00:00:21,830
그리고 이 안에 첫 번째 FleshAsset을 생성하겠습니다.

5
00:00:24,270 --> 00:00:29,830
이번에는 근육용 테트라헤드럴 메쉬(사면체 메쉬)를 생성하겠습니다.

6
00:00:29,830 --> 00:00:34,250
...

7
00:00:35,070 --> 00:00:38,190
그걸 더블클릭한 다음 '새 Dataflow 생성(Create New Dataflow)'을 선택합니다.

8
00:00:39,350 --> 00:00:40,430
저장을 클릭합니다.

9
00:00:41,530 --> 00:00:45,410
이제 빈 데이터플로 그래프가 생성되었습니다.

10
00:00:46,710 --> 00:00:51,370
이 데이터플로 그래프 안에서 근육 시뮬레이션을 구성할 겁니다.

11
00:00:52,750 --> 00:00:54,490
우선 이것도 저장해 둡시다.

12
00:00:54,490 --> 00:00:57,210
그리고 가장 먼저 할 일은…

13
00:00:57,210 --> 00:01:03,890
우클릭한 다음 'Skeletal Mesh'를 입력해 스켈레톤의 스켈레탈 메쉬를 불러옵니다.

14
00:01:05,730 --> 00:01:09,370
여기에서 'Skeleton'을 입력해 우리 스켈레톤 에셋을 찾습니다.

15
00:01:10,830 --> 00:01:17,030
그 다음 'Skeletal Mesh to Collection' 노드로 컬렉션으로 변환합니다.

16
00:01:18,450 --> 00:01:22,030
이렇게 하면 지오메트리가 보일 겁니다.

17
00:01:23,730 --> 00:01:26,310
그리고 컬렉션 스프레드시트에서 속성들도 확인할 수 있습니다.

18
00:01:26,310 --> 00:01:32,430
시뮬레이션을 구동하는 데는 이 스켈레톤의 변환(Transform)만 있으면 됩니다.

19
00:01:32,770 --> 00:01:36,310
앞서 말했듯이, 애니메이션된 스켈레톤으로 근육을 구동하고, 이어서 지방도 구동할 예정이니까요.

20
00:01:36,410 --> 00:01:40,570
그리고 최종적으로 그 변형을 스킨에 전이할 겁니다.

21
00:01:41,010 --> 00:01:44,050
그래서 필요한 것은 스켈레톤의 트랜스폼뿐입니다.

22
00:01:45,210 --> 00:01:49,550
여기 'Transforms Only' 버튼을 눌러 설정해 둡니다.

23
00:01:50,030 --> 00:01:53,830
이제 스켈레톤의 트랜스폼만 남았으니 지오메트리는 더 이상 보이지 않아야 합니다.

24
00:01:55,470 --> 00:02:03,150
근육에 대해 테트라헤드럴 메쉬를 만들 것이므로, 근육 지오메트리를 불러오겠습니다.

25
00:02:03,150 --> 00:02:06,430
다시 'Skeletal Mesh'이지만, 이번에는 근육 메쉬를 선택합니다.

26
00:02:06,590 --> 00:02:07,730
좋아요.

27
00:02:08,430 --> 00:02:10,310
이제 동일하게, 스켈레톤으로 변환…

28
00:02:11,410 --> 00:02:11,850
아, 정확히는 Skeletal Mesh Collection으로 변환합니다.

29
00:02:12,490 --> 00:02:16,270
이제 근육 메쉬가 보일 겁니다.

30
00:02:18,270 --> 00:02:22,670
여기서 'Create Tetrahedron' 노드를 만듭니다.

31
00:02:25,270 --> 00:02:29,210
연결하기 전에 파라미터를 조금 조정하겠습니다.

32
00:02:30,510 --> 00:02:35,630
'TetWild' 옵션을 사용해 고해상도의 테트라헤드럴 메쉬를 생성하겠습니다.

33
00:02:35,630 --> 00:02:42,190
'Coarsen' 버튼이 켜져 있는지 확인합니다.

34
00:02:42,410 --> 00:02:46,390
초기 테스트 단계에서는 테트라 메쉬의 해상도를 낮추어 보려 합니다.

35
00:02:47,510 --> 00:02:52,350
이 설정은 나중에 언제든지 되돌아와 변경할 수 있습니다.

36
00:02:52,630 --> 00:02:57,150
이제 여기 컬렉션을 연결하겠습니다.

37
00:02:57,270 --> 00:03:00,150
트랜스폼과 소스 지오메트리도 함께 연결합니다.

38
00:03:00,710 --> 00:03:05,250
소스 지오메트리는 근육 메쉬를 사용합니다.

39
00:03:05,250 --> 00:03:11,190
연결이 끝나면 테트라헤드럴 메쉬를 생성하는 데 약간 시간이 걸릴 겁니다.

40
00:03:12,470 --> 00:03:16,830
여기에도 트랜스폼이 포함되어 있어야 합니다.

41
00:03:18,270 --> 00:03:24,310
그리고 이 표면 메쉬에서 볼류메트릭 메쉬를 생성합니다.

42
00:03:24,310 --> 00:03:27,830
기억하세요, 근육은 표면 메쉬일 뿐입니다.

43
00:03:28,110 --> 00:03:29,590
이제 완료되었습니다.

44
00:03:31,230 --> 00:03:33,710
테트라헤드럴 메쉬를 확인할 수 있을 겁니다.

45
00:03:35,310 --> 00:03:37,430
이것은 실제로 볼류메트릭 메쉬입니다.

46
00:03:49,950 --> 00:03:50,590
좋습니다.

47
00:03:50,830 --> 00:03:57,270
스켈레탈 메쉬의 색상(버텍스 컬러)을 테트라헤드럴 메쉬로 전송할 수도 있습니다.

48
00:03:58,790 --> 00:04:03,750
'Transfer Vertex Attribute' 노드를 사용해 진행해봅시다.

49
00:04:06,530 --> 00:04:09,910
여기서 전송할 속성은 'Color'입니다.

50
00:04:12,680 --> 00:04:17,300
그리고 'From Collection'에는 Skeletal Mesh Collection을 지정합니다.

51
00:04:19,700 --> 00:04:27,480
연결이 끝나면 테트라헤드럴 메쉬로 모든 색상이 전송된 것을 볼 수 있습니다.

52
00:04:29,120 --> 00:04:32,620
이제 이를 터미널에 저장하겠습니다.

53
00:04:33,920 --> 00:04:35,280
Flesh Asset 터미널.

54
00:04:39,170 --> 00:04:40,950
이제 저장합니다.

55
00:04:41,150 --> 00:04:47,610
이제 컬렉션의 모든 내용이 우리가 사용할 Flesh Asset에 저장되었습니다.

56
00:04:49,670 --> 00:04:58,430
여기서 F를 누르면 저장된 지오메트리를 확인할 수 있습니다.

57
00:05:01,610 --> 00:05:07,050
좋습니다. 다음 영상에서는 이 테트라헤드럴 메쉬를 사용해 실제 시뮬레이션을 시작하겠습니다.

58
00:05:07,050 --> 00:05:07,330
맞습니다.

59
00:05:08,670 --> 00:05:08,850
그리고 나서 스파크를 탭합니다.

60
00:05:08,870 --> 00:05:09,650
먼저 우리는 아치다이오시선(Archdiocesanh)에서 옵니다. (인식 오류로 보임)
